# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type Auth {
  """JWT access token"""
  accessToken: String!

  """JWT refresh token"""
  refreshToken: String!
  user: User!
}

input ChangePasswordInput {
  newPassword: String!
  oldPassword: String!
}

"""Date custom scalar type"""
scalar Date

input LoginInput {
  email: String!
  password: String!
}

"""Mood of the day"""
enum Mood {
  BAD
  GOOD
}

type Mutation {
  changePassword(data: ChangePasswordInput!): User!
  login(data: LoginInput!): Auth!
  refreshToken(token: String!): Token!
  signup(data: SignupInput!): Auth!
  updateUser(data: UpdateUserInput!): User!
}

"""
Possible directions in which to order a list of items when provided an `orderBy` argument.
"""
enum OrderDirection {
  asc
  desc
}

type PageInfo {
  endCursor: String
  hasNextPage: Boolean!
  hasPreviousPage: Boolean!
  startCursor: String
}

type Query {
  hello(name: String!): String!
  helloWorld: String!
  me: User!
  userWeightEntries(userId: String!): [WeightEntry!]!
  weightEntries(after: String, before: String, first: Float, last: Float, orderBy: WeightEntryOrder, skip: Float): WeightEntryConnection!
  weightEntry(weightentryId: String!): WeightEntry!
}

input SignupInput {
  email: String!
  firstname: String
  lastname: String
  password: String!
}

type Token {
  """JWT access token"""
  accessToken: String!

  """JWT refresh token"""
  refreshToken: String!
}

input UpdateUserInput {
  firstname: String
  lastname: String
}

type User {
  """Identifies the date and time when the object was created."""
  createdAt: Date!
  email: String!
  entries: [WeightEntry!]!
  firstname: String
  id: ID!
  lastname: String

  """Identifies the date and time when the object was last updated."""
  updatedAt: Date!
}

type WeightEntry {
  """Identifies the date and time when the object was created."""
  createdAt: Date!
  day: Float!
  id: ID!
  mood: Mood!

  """Identifies the date and time when the object was last updated."""
  updatedAt: Date!
  user: User!
  weight: Float!
}

type WeightEntryConnection {
  edges: [WeightEntryEdge!]
  pageInfo: PageInfo!
  totalCount: Int!
}

type WeightEntryEdge {
  cursor: String!
  node: WeightEntry!
}

input WeightEntryOrder {
  direction: OrderDirection!
  field: WeightEntryOrderField!
}

"""Properties by which weight connections can be ordered."""
enum WeightEntryOrderField {
  createdAt
  id
  mood
  updatedAt
}
